+ client: row and col legend
+ client: Socket Timeout Exception handling
+ client: enqueue -> refactor
+ client: pawnTransformation chooser
+ rollback button support
+ constructor bar:
    + кнопка удаления фигур с доски
    + разрешить перемещение фигур внутри доски в любую точку
    + drag and drop?
    + continue game
+ create new game -> ../game/new?mode=selectedMove&side=selectedSide
+ CONSTRUCTOR mode refactoring: (ну там табличку отдельную завести со своим форматом и все такое)
+ client: opponent move listener

- синхронизация
    + fireBotMove: make async with delay
    + botService.cancelByRollback
    + game cache
    + GameResult: val game, val T
    + gameService.applyPlayerMove/applyBotMove
    + applyMove: check moverSide
    - нельзя завязываться на gameCache.asMap(), оно работает не как ConcurrentHashMap(судя по всему блочится вся мапа при put/compute операциях)

    - избавиться от @InjectGame etc;

    - gameService.listenChanges: добавить проверки

    - проблема одновременного применения applyMove:
        - слать expectedPosition от клиента для playerMove
        - разрулить на уровне botService для botMove

    - client: сделать защиту от слишком частых запросов на сервер
    - флажок isProcessing в private applyMove (чтобы следующий applyMove не вставал в очередь а падал с ошибкой)

    - SessionManager?

    - fireBotMove -> IBotEvent.fireMove
        - IEventsMulticaster

    - position: на каждый запрос сервер должен присылать актуальную позицию. если произошел рассинхрон,
        игра должна уйти на релоад (continue game)
    - chessboard (DebugCheckChessboardState?)


- move cost support:
    - moves tree
    -

- onServerRunning: fire bot move
- available moves tree viewer support
- тесты для Chessboard, MovesProvider

- для PVP режима проверять: side = pieceFrom.side
- client: для SINGLE режима разрешить ходить всегда без изменения chessboardView.state.side

- client: rotation fix
- MoveDTO: IMove, PointDTO: IPoint, ChessUtils -> shared, MovesProvider -> shared
- про rollback-е теряется инфа о lastMove. fix it
- constructor: validate board
- client: ListenOpponentChangesTask -> stop/start if visible changed
- client:  ListenOpponentChangesTask -> @SuppressLint("StaticFieldLeak")


- client: legend refactoring    (LayoutInflater)
- client: drag and drop in chessboard view
- client: надо как-то победить долгий первый вызов ретрофита


game.save:
    - gameService.rollback
    - debugController.registerPlayerForced(setSide)
    - initController.setSide