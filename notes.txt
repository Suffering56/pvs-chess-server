+ client: row and col legend
+ client: Socket Timeout Exception handling
+ client: enqueue -> refactor
+ client: pawnTransformation chooser
+ rollback button support
+ constructor bar:
    + кнопка удаления фигур с доски
    + разрешить перемещение фигур внутри доски в любую точку
    + drag and drop?
    + continue game
+ create new game -> ../game/new?mode=selectedMove&side=selectedSide
+ CONSTRUCTOR mode refactoring: (ну там табличку отдельную завести со своим форматом и все такое)

+ client: opponent move listener
- move cost support
- available moves tree viewer support

- тесты для Chessboard, MovesProvider

- для PVP режима проверять: side = pieceFrom.side
- client: для SINGLE режима разрешить ходить всегда без изменения chessboardView.state.side

- client: rotation fix
- MoveDTO: IMove, PointDTO: IPoint, ChessUtils -> shared, MovesProvider -> shared
- про rollback-е теряется инфа о lastMove. fix it
- constructor: validate board
- client: ListenOpponentChangesTask -> stop/start if visible changed
- client:  ListenOpponentChangesTask -> @SuppressLint("StaticFieldLeak")

- подумать об отвлавливании рассинхронов chessboard-ов
- client: legend refactoring    (LayoutInflater)
- client: drag and drop in chessboard view
- client: надо как-то победить долгий первый вызов ретрофита